version: 2
jobs:
  build:
    working_directory: ~/maoni-src
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      
      - run:
          name: Output relevant env. variables
          command: echo "CIRCLE_PULL_REQUEST=$CIRCLE_PULL_REQUEST" && 
            echo "CIRCLE_BUILD_NUM=$CIRCLE_BUILD_NUM" && 
            echo "CIRCLE_SHA1=$CIRCLE_SHA1"
      
      - run:
          name: Prepare tools scripts
          command: chmod +x ./tools/*.sh
      
      - run:
          name: Prepare local.properties
          command: echo "github.username=${MAONI_GITHUB_USERNAME}" > local.properties && 
            echo "github.passwordToken=${MAONI_GITHUB_PASSWORD_TOKEN}" >> local.properties && 
            echo "jira.rest.baseUrl=${MAONI_JIRA_REST_BASEURL}" >> local.properties && 
            echo "jira.username=${MAONI_JIRA_USERNAME}" >> local.properties && 
            echo "jira.password=${MAONI_JIRA_PASSWORD}" >> local.properties
      - run:
          name: Prepare maoni-keystore.properties
          command: mkdir -p ~/.droid && 
            echo "keystore=${KEYSTORE}" > ~/.droid/maoni-keystore.properties && 
            echo "storePassword=${STORE_PASSWORD}" >> ~/.droid/maoni-keystore.properties && 
            echo "keyAlias=${KEY_ALIAS}" >> ~/.droid/maoni-keystore.properties && 
            echo "keyPassword=${KEY_PASSWORD}" >> ~/.droid/maoni-keystore.properties
      
      - run:
          name: Import Translations if needed
          command: ./tools/import-translations-github.sh

      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "maoni-sample/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies --stacktrace
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "maoni-sample/build.gradle" }}
      
      - run:
          name: Run Tests
          command: ./gradlew clean lint test --stacktrace
      
      - run:
          name: Assemble package
          command: ./gradlew assembleDebug --stacktrace
      
      - run:
          name: Code coverage
          command: bash <(curl -s https://codecov.io/bash) || true
          
      - run:
          name: Update Github Pages branch
          command: ./tools/update-github-pages.sh

      - store_artifacts:
          path: buck-out/gen
          destination: buck-out
      - store_artifacts:
          path: maoni-sample/build/outputs
          destination: outputs
      - store_artifacts:
          path: maoni-sample/build/reports
          destination: reports

      - store_test_results:
          path: maoni-sample/build/test-results
